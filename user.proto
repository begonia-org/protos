syntax = "proto3";
package begonia.org.begonia;
option go_package = "github.com/begonia-org/begonia/api/v1";
import "google/protobuf/timestamp.proto";
import "common/options.proto";

enum Role {

    ADMIN = 0; 
}
enum USER_STATUS {

    ACTIVTE = 0; 
    INACTIVTE = 1;
    LOCKED = 2;
    DELETED = 3;

}

enum UserSvrCode{
    USER_UNKONW = 0;
    USER_LOGIN_ERR=4107[(.begonia.org.begonia.common.api.v1.msg) = "login fail"];
    USER_TOKEN_EXPIRE_ERR=4108[(.begonia.org.begonia.common.api.v1.msg) = "token expire"];
    // 非法的token
    USER_TOKEN_INVALIDATE_ERR=4109[(.begonia.org.begonia.common.api.v1.msg) = "invalidate token"];
    USER_TOKEN_NOT_ACTIVTE_ERR=4114[(.begonia.org.begonia.common.api.v1.msg) = "invaildate token"];
    USER_AUTH_DECRYPT_ERR=4110[(.begonia.org.begonia.common.api.v1.msg) = "invaildate token"];
    USER_ACCOUNT_ERR=4111[(.begonia.org.begonia.common.api.v1.msg) = "username or password error"];
    USER_PASSWORD_ERR=4112[(.begonia.org.begonia.common.api.v1.msg) = "username or password error"];
    USER_NOT_FOUND_ERR=4113[(.begonia.org.begonia.common.api.v1.msg) = "username or password error"];
    USER_AUTH_MISSING_ERR=4115[(.begonia.org.begonia.common.api.v1.msg) = "authorization header missing"];

}
message Users {
    // @gotags: doc:"历史ID" gorm:"primaryKey;autoIncrement;comment:自增id"
    int64 ID = 1;
    // @gotags: doc:"任务ID" json:"uid" gorm:"column:uid;type:varchar(36);unique;comment:uid"
    string uid = 2;
    // @gotags: doc:"任务ID" json:"name" gorm:"column:name;type:varchar(128);unique;comment:username" aes:"true"
    string name = 3;
    // @gotags: doc:"任务ID" json:"email" gorm:"column:email;type:varchar(128);unique;comment:Users Email" aes:"true"
    string email = 4;
    // @gotags: doc:"phone number" gorm:"type:varchar(128);unique;comment:Users Phone Number" aes:"true"
    string phone = 5;
    // @gotags: doc:"account password" gorm:"type:varchar(128);comment:Users account password" aes:"true"
    string password = 6;
    // @gotags: doc:"account avatar" gorm:"type:varchar(512);comment:Users account avatar"
    string avatar = 7;
    // @gotags: doc:"account role" gorm:"comment:Users account Role"
    Role role = 8;
    // @gotags: doc:"account status" gorm:"comment:Users account status"
    USER_STATUS status = 9;
    // @gotags: doc:"完成时间" gorm:"column:completed_at;type:datetime;serializer:timepb;comment:定时任务的最近一次完成时间"
    google.protobuf.Timestamp created_at = 10;
    // @gotags: doc:"更新时间" gorm:"autoUpdateTime;column:updated_at;type:datetime;serializer:timepb;comment:定时任务的更新时间"
    google.protobuf.Timestamp updated_at = 11;
}

message BasicAuth{
    string uid = 1;
    string name = 2;
    Role role =3;
    string audience = 4;
    string issuer = 5;
    int64 not_before = 6 [json_name="nbf"];
    int64 expiration = 7 [json_name="exp"];
    int64 issued_at = 8 [json_name="iat"];
    bool is_keep_login=9 [json_name="is_keep_login"];
    string token = 10;
}