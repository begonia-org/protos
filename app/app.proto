syntax = "proto3";
package begonia.org.sdk;
option go_package = "github.com/begonia-org/go-sdk/api/app/v1";
import "google/protobuf/descriptor.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/field_mask.proto";

import "google/api/annotations.proto";
import "common/options.proto";


enum APPStatus{
    APP_ENABLED = 0;
    APP_DISABLED = 1;
}
enum APPPremission{
	APP_READ = 0;
	APP_WRITE = 1;
	APP_DELETE = 2;
	APP_ALL = 3;
}
enum APPSvrCode{
    APP_UNKONW = 0;
    APP_CREATE_ERR=5101[(.begonia.org.sdk.common.msg) = "create app error"];
	APP_DUPLICATE_ERR=5102[(.begonia.org.sdk.common.msg) = "duplicate app name"];
	APP_SIGNATURE_ERR=5103[(.begonia.org.sdk.common.msg) = "app signature error"];
	APP_REQUEST_EXPIRED_ERR=5104[(.begonia.org.sdk.common.msg) = "request expired"];
	APP_ACCESS_KEY_MISSING_ERR=5105[(.begonia.org.sdk.common.msg) = "missing access key"];
	APP_AUTH_MISSING_ERR=5106[(.begonia.org.sdk.common.msg) = "missing auth"];
	APP_XDATE_MISSING_ERR=5107[(.begonia.org.sdk.common.msg) = "missing x-date"];
	APP_NOT_FOUND_ERR=5108[(.begonia.org.sdk.common.msg) = "app not found"];

}
message Apps{
	// @gotags: doc:"历史ID" gorm:"primaryKey;autoIncrement;comment:自增id"
	int64 id = 1;
    // @gotags: json:"name" ondeleted:"rename" gorm:"column:name;type:varchar(128);unique;comment:app服务名称"
	string name = 2;
    // @gotags: json:"description" gorm:"column:description;type:varchar(256);comment:app描述服务"
	string description = 3;
	// @gotags: json:"status" gorm:"column:status;type:tinyint;comment:app服务状态"
	APPStatus status = 4;
	// @gotags: json:"appid" primary:"appid" gorm:"column:appid;type:varchar(64);unique;comment:app服务id"
	string appid = 5;
	// @gotags: json:"access_key" gorm:"column:access_key;type:varchar(64);unique;comment:app服务key"
	string access_key = 6 [json_name="access_key"];
	// @gotags json:"secret" gorm:"column:secret;type:varchar(64);unique;comment:app服务secret"
	string secret = 7;
	// @gotags: json:"-" owner:"owner" gorm:"column:owner;type:varchar(64);comment:app服务拥有者"
	string owner = 8;
	// @gotags: json:"permission" gorm:"column:permission;type:int;comment:app服务权限"
	int32 permission = 11;
    // @gotags: json:"is_deleted" gorm:"column:is_deleted;type:tinyint;comment:proto服务是否删除"
    bool is_deleted=9 [json_name="is_deleted"];
	// @gotags: json:"tags" gorm:"column:tags;type:json;serializer:json;comment:app服务标签"
	repeated string tags = 10;

	// @gotags: doc:"完成时间" gorm:"column:created_at;type:datetime;serializer:timepb;comment:定时任务的最近一次完成时间"
    google.protobuf.Timestamp created_at = 12[json_name="created_at"];
    // @gotags: doc:"更新时间" gorm:"column:updated_at;type:datetime;serializer:timepb;comment:定时任务的更新时间"
    google.protobuf.Timestamp updated_at = 13[json_name="updated_at"];
	// @gotags: gorm:"-" json:"-"
	google.protobuf.FieldMask update_mask = 18[json_name="update_mask"];
}
message CreateAppRequest{
	// @gotags: json:"name" gorm:"column:name;type:varchar(128);unique;comment:app名称"
	string name = 1;
	// @gotags: json:"description" gorm:"column:description;type:varchar(256);comment:app描述"
	string description = 2;
	// @gotags: json:"tags" gorm:"column:tags;type:json;comment:app服务标签"
	repeated string tags = 8;

}
message AddAppResponse{
	string appid = 1[json_name="appid"];
	string access_key = 2[json_name="access_key"];
	string secret = 3;
}
message DeleteAppRequest{
	string appid = 1;
}
message DeleteAppResponse{
}
message AppsRequest {
	string appid = 6 [json_name="appid"];
	 // @gotags: json:"name" gorm:"column:name;type:varchar(128);unique;comment:app服务名称"
	 string name = 2;
	 // @gotags: json:"description" gorm:"column:description;type:varchar(256);comment:app描述服务"
	 string description = 3;
	 repeated string tags = 8;

	 google.protobuf.FieldMask update_mask = 18;

}
message GetAPPRequest{
	// @gotags: json:"appid" gorm:"column:appid;type:varchar(64);unique;comment:app服务id"
	string appid = 1;

}
message AppsListRequest{
	// @gotags: json:"page" gorm:"column:page;type:int;comment:页码"
	int32 page = 1;
	// @gotags: json:"page_size" gorm:"column:page_size;type:int;comment:每页数量"
	int32 page_size = 2;
    repeated string tags = 3;
    // repeated string name = 4;
    // repeated string appid = 5;
    // repeated string owner = 6;
    // // @gotags: json:"access_key"
    // repeated string access_key = 7;
    // // @gotags: json:"status" gorm:"column:status;type:tinyint;comment:app服务状态"
    repeated	APPStatus status = 8;
}
message AppsListResponse{
	// @gotags: json:"apps"
	repeated Apps apps = 1;
	// @gotags: json:"total" gorm:"column:total;type:int;comment:总数"
	int32 total = 2;
}
service AppsService {
	option (.begonia.org.sdk.common.auth_reqiured)=true;
	option (.begonia.org.sdk.common.http_response)="begonia.org.sdk.common.HttpResponse";

	// @gotags: doc:"添加app服务"
	rpc Put(AppsRequest) returns (AddAppResponse){
		option (google.api.http) = {
            post: "/api/v1/app"
            body: "*"
          };
	};
	rpc Patch(AppsRequest) returns (Apps){
		option (google.api.http) = {
			patch: "/api/v1/app"
			body: "*"
		  };
	};
	// @gotags: doc:"获取app服务"
	rpc Get(GetAPPRequest) returns (Apps){
		option (google.api.http) = {
			get: "/api/v1/app/{appid}"
		  };
	};
	rpc Delete(DeleteAppRequest) returns (DeleteAppResponse){
		option (google.api.http) = {
			delete: "/api/v1/app/{appid}"
		  };
	};
	rpc List(AppsListRequest) returns (AppsListResponse){
		option (google.api.http) = {
			get: "/api/v1/apps"
		  };
	};
}
