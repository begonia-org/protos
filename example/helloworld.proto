syntax = "proto3";

option go_package = "github.com/begonia-org/begonia/example/api/v1";
option java_multiple_files = true;
option java_package = "io.grpc.examples.helloworld";
option java_outer_classname = "HelloWorldProto";
option objc_class_prefix = "HLW";

package helloworld;

import "google/api/annotations.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/descriptor.proto";
import "google/api/httpbody.proto";
import "google/protobuf/timestamp.proto";
import "common/options.proto";

// The greeting service definition.
// The greeting service definition.
service Greeter {
  // Sends a greeting
  rpc SayHello (HelloRequest) returns (HelloReply) {
    option (google.api.http)={
		post:"/api/v1/example/post"
		body:"*"
	};
  }
    rpc SayHelloGet (HelloRequest) returns (HelloReply) {
    option (google.api.http)={
		get:"/api/v1/example/{name}"
	};
  }

  rpc SayHelloServerSideEvent (HelloRequest) returns (stream HelloReply) {
    option (google.api.http) = {
        get: "/api/v1/example/server/sse/{name}"
      };
  }

  rpc SayHelloClientStream (stream HelloRequest) returns (RepeatedReply) {
    option (google.api.http) = {
        post: "/api/v1/example/client/stream"
        body: "*"
      };

  }
  rpc SayHelloWebsocket (stream HelloRequest) returns (stream HelloReply) {
    option (google.api.http) = {
        get: "/api/v1/example/server/websocket"
      };
  }
  rpc SayHelloBody (google.api.HttpBody) returns (google.api.HttpBody) {
    option (google.api.http) = {
        post: "/api/v1/example/body"
      };
  }
  rpc SayHelloError (ErrorRequest) returns (HelloReply) {
    option (google.api.http) = {
        get: "/api/v1/example/error/test"
      };
  }
  
}

message ErrorRequest {
  string msg = 1;
  int32 code = 2;
}
// The request message containing the user's name.
message HelloRequest {
  string msg = 1;
  string name = 2;
}
message HelloSubRequest{
    string sub_msg = 1[json_name="sub_msg"];
    // @gotags: validate:"required"
    string sub_name = 2[json_name="sub_name"];
    // @gotags: validate:"required,gte=18,lte=35"
    int32 sub_age = 4[json_name="sub_age",(.begonia.org.sdk.common.api.v1.validate)="required,gte=18,lte=35"];
    google.protobuf.FieldMask update_mask = 3[json_name="update_mask"];
}
message HelloRequestWithValidator{
    // @gotags: validate:"required"
    string msg = 1;
    // @gotags: validate:"required"
    string name = 2;
    int32 age = 3[(.begonia.org.sdk.common.api.v1.validate)="required,gte=18,lte=35"];
    HelloSubRequest sub = 4;
    // @gotags: validate:"required,dive"
    repeated HelloSubRequest subs = 5;

    google.protobuf.FieldMask update_mask = 6[json_name="update_mask"];
    // @gotags: validate:"required,dive"
    map<string, HelloSubRequest> sub_map = 7[json_name="sub_map",(.begonia.org.sdk.common.api.v1.validate)="required,dive"];
    // @gotags: validate:"required"
    map<string, string> sub_map2 = 8[json_name="sub_map2",(.begonia.org.sdk.common.api.v1.validate)="required"];


}
// The response message containing the greetings
message HelloReply {
  string message = 1;
  string name = 2;
}
message RepeatedReply{
    repeated HelloReply replies = 1;
}
enum EnumAllow {
  ALLOW = 0;
  DENY = 1;
}
message ExampleMessage {
  string message = 1;
  int32 code = 2;
  double float_num = 3[json_name="float_num"];
  float float_data = 14[json_name="float_data"];
  bytes byte_data = 4[json_name="byte_data"];
  bool bool_data = 5[json_name="bool_data"];
  EnumAllow allow = 6;
  repeated int64 repeated_data = 7[json_name="repeated_data"];
  fixed64 fixed_data = 8[json_name="fixed_data"];
  sfixed64 sfixed_data = 9[json_name="sfixed_data"];
  sfixed32 sfixed32_data = 10[json_name="sfixed32_data"];
  fixed32 fixed32_data = 11[json_name="fixed32_data"];
  repeated HelloRequest repeated_msg = 12[json_name="repeated_msg"];
  HelloRequest msg = 13;
  google.protobuf.FieldMask mask = 18;
}

message ExampleTable{
    // @gotags: gorm:"primaryKey;autoIncrement;comment:自增id"
    int64 ID = 1;
    // @gotags: json:"uid"  primary:"uid" gorm:"column:uid;type:varchar(36);not null;unique;comment:uid"
    string uid = 2;
	// @gotags: json:"-" owner:"owner" gorm:"column:owner;not null;type:varchar(64);comment:app服务拥有者"
    string owner = 3;
    // @gotags: json:"is_deleted" gorm:"column:is_deleted;type:tinyint;comment:proto服务是否删除"
    bool is_deleted=12 [json_name="is_deleted"];
    // @gotags: doc:"完成时间" gorm:"column:created_at;type:datetime;serializer:timepb;comment:定时任务的最近一次完成时间"
    google.protobuf.Timestamp created_at = 10[json_name="created_at"];
    // @gotags: doc:"更新时间" gorm:"column:updated_at;type:datetime;serializer:timepb;comment:定时任务的更新时间"
    google.protobuf.Timestamp updated_at = 11[json_name="updated_at"];
    // @gotags: gorm:"-" json:"-"
    google.protobuf.FieldMask update_mask = 18[json_name="update_mask"];
}