syntax = "proto3";

option go_package = "github.com/begonia-org/go-sdk/example/api/v1";
option java_multiple_files = true;
option java_package = "io.grpc.examples.helloworld";
option java_outer_classname = "HelloWorldProto";
option objc_class_prefix = "HLW";

package begonia.org.sdk;

import "google/api/annotations.proto";
import "google/protobuf/descriptor.proto";
import "common/web.proto";
import "common/options.proto";

// The greeting service definition.
// The greeting service definition.
service Greeter {
  // Sends a greeting
  rpc SayHello (HelloRequest) returns (HelloReply) {
    option (google.api.http)={
		post:"/api/v1/example/helloworld"
		body:"*"
	};
  }
    rpc SayHelloGet (HelloRequest) returns (HelloReply) {
    option (google.api.http)={
		get:"/api/v1/example/helloworld"
	};
  }

  rpc SayHelloStreamReply (HelloRequest) returns (stream HelloReply) {
    option (google.api.http) = {
        get: "/api/v1/example/helloworld/server/stream"
      };

  }

  rpc SayHelloStreamSend (stream HelloRequest) returns ( HelloReply) {
    option (google.api.http) = {
        post: "/api/v1/example/helloworld/client/stream"
        body: "*"
      };

  }
  rpc SayHelloBidiStream (stream HelloRequest) returns (stream HelloReply) {
    option (google.api.http) = {
        get: "/api/v1/example/helloworld/stream"
      };
  }
}

// The request message containing the user's name.
message HelloRequest {
  string msg = 1;
}

// The response message containing the greetings
message HelloReply {
  string message = 1;
}